irun: 15.20-s039: (c) Copyright 1995-2017 Cadence Design Systems, Inc.
TOOL:	irun	15.20-s039: Started on Mar 04, 2021 at 00:41:53 CST
irun
	-sv
	tb_term.sv
	../src/SME.v
	+access+r
Recompiling... reason: file '../src/SME.v' is newer than expected.
	expected: Thu Mar  4 00:40:12 2021
	actual:   Thu Mar  4 00:41:50 2021
file: ../src/SME.v
	module worklib.SME:v
		errors: 0, warnings: 0
		Caching library 'worklib' ....... Done
	Elaborating the design hierarchy:
	Top level design units:
		$unit_0x435f8afc
		testfixture
ncelab: *W,DSEMEL: This SystemVerilog design will be simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
	Building instance overlay tables: .................... Done
	Generating native compiled code:
		worklib.SME:v <0x75de0da0>
			streams:  29, words: 13726
	Building instance specific data structures.
	Loading native compiled code:     .................... Done
	Design hierarchy summary:
		                  Instances  Unique
		Modules:                  2       2
		Registers:               46      46
		Scalar wires:             6       -
		Vectored wires:           4       -
		Always blocks:           16      16
		Initial blocks:          10      10
		Cont. assignments:        2       2
		Pseudo assignments:       1       1
		Compilation units:        1       1
		Simulation timescale:  10ps
	Writing initial simulation snapshot: worklib.testfixture:sv
Loading snapshot worklib.testfixture:sv .................... Done
ncsim: *W,DSEM2009: This SystemVerilog design is simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
*Verdi* Loading libsscore_ius152.so
ncsim> source /usr/cad/cadence/INCISIV/cur/tools/inca/files/ncsimrc
ncsim> run
FSDB Dumper for IUS, Release Verdi_R-2020.12, Linux, 11/19/2020
(C) 1996 - 2020 by Synopsys, Inc.
*Verdi* FSDB WARNING: The FSDB file already exists. Overwriting the FSDB file may crash the programs that are using this file.
*Verdi* : Create FSDB file 'SME.fsdb'
*Verdi* : Begin traversing the scopes, layer (0).
*Verdi* : End of traversing.
*Verdi* : Begin traversing the MDAs, layer (0).
*Verdi* : Enable +mda and +packedmda dumping.
*Verdi* : End of traversing the MDAs.
----------------------
-- Simulation Start --
----------------------
  __________________________________________________________
  == String 1  "abcdijk lmnop q rstuv"
  -- Pattern 1  "1234"
       cycle 36, expect(0,00) , get(0,00) >> Pass
  -- Pattern 2  "abcd"
       cycle 43, expect(1,00) , get(1,00) >> Pass
  -- Pattern 3  "dijk"
       cycle 53, expect(1,03) , get(1,03) >> Pass
  -- Pattern 4  "pqrst"
       cycle 72, expect(0,00) , get(0,0c) >> Pass
  -- Pattern 5  "pqr.t"
       cycle 91, expect(0,00) , get(0,0c) >> Pass
  -- Pattern 6  "c...k"
       cycle a2, expect(1,02) , get(1,02) >> Pass
  -- Pattern 7  "^lmno"
       cycle c0, expect(1,08) , get([1;31m0,00[0m) >> Fail
  -- Pattern 8  "rstuv$"
       cycle df, expect(1,10) , get([1;31m0,10[0m) >> Fail
  -- Pattern 9  "^rmn"
       cycle fc, expect(0,00) , get(0,00) >> Pass
  -- Pattern a  "ijk l$"
       cycle 120, expect(0,00) , get(0,04) >> Pass
  -- Pattern b  "v"
       cycle 13a, expect(1,14) , get(1,14) >> Pass
  -- Pattern c  "lmnoprst"
       cycle 160, expect(0,00) , get(0,08) >> Pass
  -- Pattern d  "^ijk$"
       cycle 17e, expect(0,00) , get(0,00) >> Pass
  -- Pattern e  "^q$"
       cycle 19a, expect(1,0e) , get([1;31m0,00[0m) >> Fail
  __________________________________________________________
  == String 2  "2x1=2 2x2=4 2x3=6"
  -- Pattern 1  "^2.2.2"
       cycle 1c6, expect(0,00) , get(0,00) >> Pass
  -- Pattern 2  "2.2.2"
       cycle 1db, expect(1,04) , get(1,04) >> Pass
  -- Pattern 3  "^2.2.4$"
       cycle 1f7, expect(1,06) , get([1;31m0,00[0m) >> Fail
  -- Pattern 4  "."
       cycle 1fe, expect(1,00) , get(1,00) >> Pass
  -- Pattern 5  "^.."
       cycle 216, expect(1,00) , get([1;31m0,00[0m) >> Fail
  -- Pattern 6  "^.$"
       cycle 22e, expect(0,00) , get(0,00) >> Pass
  -- Pattern 7  "2.$"
       cycle 250, expect(0,00) , get(0,0c) >> Pass
  -- Pattern 8  "2x4=7"
       cycle 272, expect(0,00) , get(0,0c) >> Pass
  -- Pattern 9  "3=6-3"
       cycle 28c, expect(0,00) , get(0,0e) >> Pass
  -- Pattern a  "1.2=2"
       cycle 2a9, expect(0,00) , get(0,02) >> Pass
  -- Pattern b  "2*2=4"
       cycle 2c8, expect(1,00) , get([1;31m0,0c[0m) >> Fail
  __________________________________________________________
  == String 3  "She sees cheese"
  -- Pattern 1  "ees."
       cycle 2ea, expect(1,05) , get(1,05) >> Pass
  -- Pattern 2  "ees.$"
       cycle 308, expect(1,0b) , get([1;31m0,0b[0m) >> Fail
  -- Pattern 3  "e..se"
       cycle 329, expect(0,00) , get(0,0b) >> Pass
  -- Pattern 4  "e..ee$"
       cycle 34d, expect(0,00) , get(0,0b) >> Pass
  -- Pattern 5  "^ees*"
       cycle 365, expect(0,00) , get(0,00) >> Pass
  -- Pattern 6  "hee*se"
       cycle 383, expect(1,0a) , get([1;31m0,0a[0m) >> Fail
  -- Pattern 7  "he.s"
       cycle 391, expect(1,01) , get(1,01) >> Pass
  -- Pattern 8  "*see$"
       cycle 3a9, expect(0,00) , get(0,00) >> Pass
  -- Pattern 9  "se*ce"
       cycle 3c4, expect(0,00) , get(0,0d) >> Pass
  __________________________________________________________
  == String 4  "But she said the butter's bitter"
  -- Pattern 1  "sa*said"
       cycle 413, expect(0,00) , get(0,18) >> Pass
  -- Pattern 2  "b*tter"
       cycle 43f, expect(1,11) , get([1;31m0,1a[0m) >> Fail
  -- Pattern 3  "b*tter$"
       cycle 46c, expect(1,11) , get([1;31m0,1a[0m) >> Fail
  -- Pattern 4  "ut*r"
       cycle 498, expect(1,01) , get([1;31m0,12[0m) >> Fail
  -- Pattern 5  "ut*tted"
       cycle 4c7, expect(0,00) , get(0,12) >> Pass
  -- Pattern 6  "^ut*tter"
       cycle 4f3, expect(0,00) , get(0,00) >> Pass
  -- Pattern 7  "*tered"
       cycle 51d, expect(0,00) , get(0,00) >> Pass
  __________________________________________________________
  == String 5  "He threw three free throws"
  -- Pattern 1  "thr*the$"
       cycle 566, expect(0,00) , get(0,14) >> Pass
  -- Pattern 2  "^thro*th"
       cycle 58c, expect(0,00) , get(0,00) >> Pass
  -- Pattern 3  ".ree th"
       cycle 5c3, expect(1,0f) , get(1,0f) >> Pass
  -- Pattern 4  ".ree  fr"
       cycle 60c, expect(0,00) , get(0,18) >> Pass
  -- Pattern 5  ".ree *re"
       cycle 655, expect(1,0a) , get([1;31m0,18[0m) >> Fail
  -- Pattern 6  "re. thr"
       cycle 66d, expect(1,05) , get(1,05) >> Pass
  -- Pattern 7  "ee*ee fr"
       cycle 69b, expect(0,00) , get(0,12) >> Pass
  -- Pattern 8  "ee*ee th"
       cycle 6c9, expect(1,0c) , get([1;31m0,12[0m) >> Fail
  -- Pattern 9  "re*ee.$"
       cycle 6f5, expect(0,00) , get(0,16) >> Pass
  -- Pattern a  "^...$"
       cycle 718, expect(0,00) , get(0,00) >> Pass
  -- Pattern b  "^....$"
       cycle 73c, expect(1,0f) , get([1;31m0,00[0m) >> Fail
----------------------------------
-- Simulation finish            --
-- cycle =1853 , Score =58       --
----------------------------------
Simulation complete via $finish(1) at time 37060 NS + 0
./tb_term.sv:201                     $finish;
ncsim> exit
TOOL:	irun	15.20-s039: Exiting on Mar 04, 2021 at 00:41:59 CST  (total: 00:00:06)
