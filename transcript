# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all 
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 161, expect(1,06) , get(1,06) >> Pass
#   -- Pattern 4  "."
#        cycle 164, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 16e, expect(1,00) , get(1,06) >> Wrong index
#   -- Pattern 6  "^.$"
#        cycle 182, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 196, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1aa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1be, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1d2, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1e1, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1fb, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 20d, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 21e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 230, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 242, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 255, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 25c, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 26f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 283, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c8, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2e3, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 308, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 323, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 348, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 36e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 392, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3cb, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3ea, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 402, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 41e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 434, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 442, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 461, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 47b, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 49a, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4b7, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^....$"
#        cycle 4cd, expect(1,0f) , get(1,0f) >> Pass
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1230 , Score =98       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24600 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201

vlog -sv tb.sv SME.v 
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 161, expect(1,06) , get(1,06) >> Pass
#   -- Pattern 4  "."
#        cycle 164, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 178, expect(1,00) , get(0,0f) >> Fail
#   -- Pattern 6  "^.$"
#        cycle 18c, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 1a0, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1c8, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1dc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1eb, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 205, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 217, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 228, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 23a, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 24c, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 25f, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 266, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 279, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 28d, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2d2, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2ed, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 312, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 32d, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 352, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 378, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 39c, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3d5, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3f4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 40c, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 428, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 43e, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 44c, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 46b, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 485, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 4a4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4c1, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^....$"
#        cycle 4de, expect(1,0f) , get(0,15) >> Fail
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1247 , Score =94       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24940 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201

vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 167, expect(1,06) , get(0,0b) >> Fail
#   -- Pattern 4  "."
#        cycle 16a, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 16f, expect(1,00) , get(1,01) >> Wrong index
#   -- Pattern 6  "^.$"
#        cycle 183, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 197, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1ab, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1bf, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1d3, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1e2, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1fc, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 20e, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 21f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 231, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 243, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 256, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 25d, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 270, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 284, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c9, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2e4, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 309, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 324, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 349, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 36f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 393, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3eb, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 403, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 41f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 435, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 443, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 462, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 47c, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 49b, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4a2, expect(0,--) , get(1,--) >> Fail
#   -- Pattern b  "^....$"
#        cycle 4bf, expect(1,0f) , get(0,15) >> Fail
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1216 , Score =91       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24320 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201
vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all 
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 167, expect(1,06) , get(0,0b) >> Fail
#   -- Pattern 4  "."
#        cycle 16a, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 16f, expect(1,00) , get(1,01) >> Wrong index
#   -- Pattern 6  "^.$"
#        cycle 183, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 197, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1ab, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1bf, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1d3, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1e2, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1fc, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 20e, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 21f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 231, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 243, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 256, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 25d, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 270, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 284, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c9, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2e4, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 309, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 324, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 349, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 36f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 393, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3eb, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 403, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 41f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 435, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 443, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 462, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 47c, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 49b, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4b8, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^....$"
#        cycle 4d5, expect(1,0f) , get(0,15) >> Fail
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1238 , Score =92       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24760 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201
+
# invalid command name "+"
vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME

run -all 
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 161, expect(1,06) , get(1,06) >> Pass
#   -- Pattern 4  "."
#        cycle 164, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 16e, expect(1,00) , get(1,06) >> Wrong index
#   -- Pattern 6  "^.$"
#        cycle 182, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 196, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1aa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1be, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1d2, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1e1, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1fb, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 20d, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 21e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 230, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 242, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 255, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 25c, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 26f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 283, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c8, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2e3, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 308, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 323, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 348, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 36e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 392, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3cb, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3ea, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 402, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 41e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 434, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 442, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 461, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 47b, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 49a, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4b7, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^....$"
#        cycle 4cd, expect(1,0f) , get(1,0f) >> Pass
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1230 , Score =98       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24600 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201

vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 161, expect(1,06) , get(1,06) >> Pass
#   -- Pattern 4  "."
#        cycle 164, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 16e, expect(1,00) , get(1,06) >> Wrong index
#   -- Pattern 6  "^.$"
#        cycle 182, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 196, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1aa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1be, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1d2, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1e1, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1fb, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 20d, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 21e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 230, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 242, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 255, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 25c, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 26f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 283, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c8, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2e3, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 308, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 323, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 348, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 36e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 392, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3cb, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3ea, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 402, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 41e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 434, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 442, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 461, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 47b, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 49a, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4b7, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^...."
#        cycle 4c0, expect(1,0f) , get(1,03) >> Wrong index
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1217 , Score =96       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24340 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201

vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 161, expect(1,06) , get(1,06) >> Pass
#   -- Pattern 4  "."
#        cycle 164, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 16e, expect(1,00) , get(1,06) >> Wrong index
#   -- Pattern 6  "^.$"
#        cycle 182, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 196, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1aa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1be, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1d2, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1e1, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1fb, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 20d, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 21e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 230, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 242, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 255, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 25c, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 26f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 283, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c8, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2e3, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 308, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 323, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 348, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 36e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 392, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3cb, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3ea, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 402, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 41e, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 434, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 442, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 461, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 47b, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 49a, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4b7, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^....$"
#        cycle 4cd, expect(1,0f) , get(1,0f) >> Pass
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1230 , Score =98       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24600 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201

vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 167, expect(1,06) , get(0,0b) >> Fail
#   -- Pattern 4  "."
#        cycle 16a, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 16f, expect(1,00) , get(1,01) >> Wrong index
#   -- Pattern 6  "^.$"
#        cycle 183, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 197, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1ab, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1bf, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1d3, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1e2, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1fc, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 20e, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 21f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 231, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 243, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 256, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 25d, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 270, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 284, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c9, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2e4, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 309, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 324, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 349, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 36f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 393, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3eb, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 403, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 41f, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 435, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 443, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 462, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 47c, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 49b, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4b8, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^....$"
#        cycle 4d5, expect(1,0f) , get(0,15) >> Fail
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1238 , Score =92       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24760 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201

vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 161, expect(1,06) , get(1,06) >> Pass
#   -- Pattern 4  "."
#        cycle 164, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 169, expect(1,00) , get(1,01) >> Wrong index
#   -- Pattern 6  "^.$"
#        cycle 17d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 191, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1a5, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1b9, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1cd, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1dc, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1f6, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 208, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 219, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 22b, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 23d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 250, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 257, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 26a, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 27e, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c3, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2de, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 303, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 31e, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 343, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 369, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 38d, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3c6, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3e5, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 3fd, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 419, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 42f, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 43d, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 45c, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 476, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 495, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4b2, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^....$"
#        cycle 4c8, expect(1,0f) , get(1,0f) >> Pass
# ----------------------------------
# -- Simulation finish            --
# -- cycle =1225 , Score =98       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24500 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201

vlog -sv tb.sv SME.v
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module testfixture
# -- Compiling module SME
# 
# Top level modules:
# 	testfixture
vsim testfixture
# vsim testfixture 
# Loading sv_std.std
# Loading work.testfixture
# Loading work.SME
run -all
# ----------------------
# -- Simulation Start --
# ----------------------
#   __________________________________________________________
#   == String 1  "abcdijk lmnop q rstuv"
#   -- Pattern 1  "1234"
#        cycle 30, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "abcd"
#        cycle 36, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 3  "dijk"
#        cycle 3f, expect(1,03) , get(1,03) >> Pass
#   -- Pattern 4  "pqrst"
#        cycle 56, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "pqr.t"
#        cycle 6d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "c...k"
#        cycle 76, expect(1,02) , get(1,02) >> Pass
#   -- Pattern 7  "^lmno"
#        cycle 84, expect(1,08) , get(1,08) >> Pass
#   -- Pattern 8  "rstuv$"
#        cycle 9c, expect(1,10) , get(1,10) >> Pass
#   -- Pattern 9  "^rmn"
#        cycle b4, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "ijk l$"
#        cycle cc, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "v"
#        cycle e3, expect(1,14) , get(1,14) >> Pass
#   -- Pattern c  "lmnoprst"
#        cycle fa, expect(0,--) , get(0,--) >> Pass
#   -- Pattern d  "^ijk$"
#        cycle 112, expect(0,--) , get(0,--) >> Pass
#   -- Pattern e  "^q$"
#        cycle 124, expect(1,0e) , get(1,0e) >> Pass
#   __________________________________________________________
#   == String 2  "2x1=2 2x2=4 2x3=6"
#   -- Pattern 1  "^2.2.2"
#        cycle 148, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "2.2.2"
#        cycle 153, expect(1,04) , get(1,04) >> Pass
#   -- Pattern 3  "^2.2.4$"
#        cycle 161, expect(1,06) , get(1,06) >> Pass
#   -- Pattern 4  "."
#        cycle 164, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 5  "^.."
#        cycle 169, expect(1,00) , get(1,00) >> Pass
#   -- Pattern 6  "^.$"
#        cycle 17d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "2.$"
#        cycle 191, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "2x4=7"
#        cycle 1a5, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "3=6-3"
#        cycle 1b9, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "1.2=2"
#        cycle 1cd, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "2*2=4"
#        cycle 1dc, expect(1,00) , get(1,00) >> Pass
#   __________________________________________________________
#   == String 3  "She sees cheese"
#   -- Pattern 1  "ees."
#        cycle 1f6, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 2  "ees.$"
#        cycle 208, expect(1,0b) , get(1,0b) >> Pass
#   -- Pattern 3  "e..se"
#        cycle 219, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 4  "e..ee$"
#        cycle 22b, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  "^ees*"
#        cycle 23d, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "hee*se"
#        cycle 250, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 7  "he.s"
#        cycle 257, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 8  "*see$"
#        cycle 26a, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 9  "se*ce"
#        cycle 27e, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 4  "But she said the butter's bitter"
#   -- Pattern 1  "sa*said"
#        cycle 2c3, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "b*tter"
#        cycle 2de, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 3  "b*tter$"
#        cycle 303, expect(1,11) , get(1,11) >> Pass
#   -- Pattern 4  "ut*r"
#        cycle 31e, expect(1,01) , get(1,01) >> Pass
#   -- Pattern 5  "ut*tted"
#        cycle 343, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 6  "^ut*tter"
#        cycle 369, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 7  "*tered"
#        cycle 38d, expect(0,--) , get(0,--) >> Pass
#   __________________________________________________________
#   == String 5  "He threw three free throws"
#   -- Pattern 1  "thr*the$"
#        cycle 3c6, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 2  "^thro*th"
#        cycle 3e5, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 3  ".ree th"
#        cycle 3fd, expect(1,0f) , get(1,0f) >> Pass
#   -- Pattern 4  ".ree  fr"
#        cycle 419, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 5  ".ree *re"
#        cycle 42f, expect(1,0a) , get(1,0a) >> Pass
#   -- Pattern 6  "re. thr"
#        cycle 43d, expect(1,05) , get(1,05) >> Pass
#   -- Pattern 7  "ee*ee fr"
#        cycle 45c, expect(0,--) , get(0,--) >> Pass
#   -- Pattern 8  "ee*ee th"
#        cycle 476, expect(1,0c) , get(1,0c) >> Pass
#   -- Pattern 9  "re*ee.$"
#        cycle 495, expect(0,--) , get(0,--) >> Pass
#   -- Pattern a  "^...$"
#        cycle 4b2, expect(0,--) , get(0,--) >> Pass
#   -- Pattern b  "^....$"
#        cycle 4c8, expect(1,0f) , get(1,0f) >> Pass
# ----------------------------------
# -- Simulation finish, ALL PASS  --
# -- cycle =1225 , Score =100       --
# ----------------------------------
# ** Note: $finish    : tb.sv(201)
#    Time: 24500 ns  Iteration: 1  Instance: /testfixture
# 1
# Break in Module testfixture at tb.sv line 201
